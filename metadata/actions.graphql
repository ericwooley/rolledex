type Mutation {
  login (
    loginArgs: LoginInput!
  ): LoginResponse
}


type Mutation {
  logout : LogoutResponse
}


type Query {
  me : MeResponse!
}


type Mutation {
  refreshToken : NewTokenResponse
}


type Mutation {
  signUp (
    newUserArgs: SignupArgs!
  ): SignUpResult
}




input SignupArgs {
  email : String!
  password : String!
}

input LoginArg {
  email : String!
  password : String!
}

input LoginInput {
  email : String!
  password : String!
}

type SignUpResult {
  success : Boolean!
  email : String!
}

type LoginResponse {
  accessToken : String!
}

type NewTokenResponse {
  accessToken : String!
}

type SampleOutput {
  id : uuid!
  email : String!
}

type MeResponse {
  id : uuid!
  email : String!
}

type LogoutResponse {
  ok : Boolean!
}

